rules_version = '2';
service firebase.storage {
    match /b/{bucket}/o {

        function isLoggedIn() {
            return request.auth.uid != null;
        }

        function isOwner(ownerId) {
            return isLoggedIn() && request.auth.uid == ownerId;
        }

        function validateSize() {
            return request.resource.size < 5 * 1024 * 1024;
        }

        function isImage() {
            return request.resource.contentType.matches('image/.*');
        }

        match /{document=**} {
            allow read, write: if false;
        }

        match /avatars/{userId} {
            allow read: if isLoggedIn();
            allow create, update: if isOwner(userId) && validateSize() && isImage();
            allow delete: if isOwner(userId);
        }

        match /tests/{testId}/{imageId} {
            function isTestDeleted() {
                return !firestore.exists(/databases/(default)/documents/tests/$(testId))
            }

            allow read: if isLoggedIn();
            allow create, update: if isOwner(getAuthor()) && validateSize() && isImage();
            allow delete: if isTestDeleted();
        }
    }
}